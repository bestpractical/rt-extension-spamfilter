%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2014 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}
<%args>
$Name => undef
$Attr => undef
</%args>


<%once>

# For readability, ncapsulate the button-generating code into a
# function here rather than putting it inline in the big hash.
my $buttons_sub = sub {
    my ($email) = @_;

    my $ret = '';
    if ($email->Status ne 'resolved') {
       $ret .= '<button type="button" class="create_user" name="Release-' . $email->id . '">' . loc('Not Spam') . '</button>';
    }
    if ($email->Status ne 'deleted') {
        $ret .= '&nbsp;<button type="button" class="discard" name="Delete-' . $email->id . '">' . loc('Delete') . '</button>';
    }

    # Here's a magical thing... if you return a *reference* to a scalar,
    # the result is not HTML-escaped.  If you just return a scalar, it is.
    # Hence the \ before $ret.
    return \$ret;
};

my $COLUMN_MAP;

$COLUMN_MAP = {
    id  => {
        attribute => 'id',
        title     => 'id', # loc
        value     => sub { return $_[0]->id }
    },
    Status  => {
        attribute => 'Status',
        title     => 'Status', # loc
        value     => sub { return $_[0]->Status }
    },
    Headers => {
        attribute => 'Headers',
        title     => 'Headers', # loc
        value     => sub { return $_[0]->Headers }
    },
    Subject => {
        title     => 'Subject', # loc
        value     => sub { return $_[0]->GetHeader('Subject') || "(" . loc('No subject') . ")" }
    },
    From => {
        title     => 'From', # loc
        value     => sub { return $_[0]->From }
    },
    To => {
        title     => 'To', # loc
        value     => sub { return $_[0]->GetHeader('To') }
    },
    Date => {
        title     => 'Date', # loc
        value     => sub { return $_[0]->GetHeader('Date') }
    },
    Score  => {
        attribute => 'Score',
        title     => 'Score', # loc
        value     => sub { return $_[0]->Score }
    },
    Disposition => {
        title     => 'Disposition', #loc
        value     => $buttons_sub,
    },
};

</%once>
<%init>
return GetColumnMapEntry( Map => $COLUMN_MAP, Name => $Name, Attribute => $Attr );
</%init>
